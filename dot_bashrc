# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi
export PATH

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions
if [ -d ~/.bashrc.d ]; then
	for rc in ~/.bashrc.d/*; do
		if [ -f "$rc" ]; then
			. "$rc"
		fi
	done
fi

unset rc

# Custom PS1 prompt
# Set colors
username_color='\[\033[01;35m\]'
hostname_color='\[\033[01;32m\]'
filepath_color='\[\033[01;34m\]'
reset_color='\[\033[0m\]'

# Set prompt format
PS1="${username_color}\u${reset_color}@${hostname_color}\h${reset_color}:${filepath_color}\w${reset_color}\$ "

alias brc='nv ~/.bashrc && source ~/.bashrc'
alias sbrc='source ~/.bashrc'

# Navigating up the directory tree
x=".."
y=".."
alias $x="cd $y"
for i in {1..100}; do x="${x}."; y="${y}/.."; alias $x="cd $y"; done

# My Stuff
alias nv=nvim
alias rmswp='rm ~/.local/state/nvim/swap/*.swp'
rmmac() {
    find . -type f -name ".DS_Store" -delete
    find . -type d -name "__MACOSX" -exec rm -rf {} +
}

ptr() {
    local temp_file="$(mktemp -u /tmp/powertop_report.XXXXXX.html)"
    sudo powertop --html="$temp_file"
    xdg-open "$temp_file"
}

# Other aliases
alias op='xdg-open 2>/dev/null'
complete -F _filedir_xspec op
alias fop='op "$(fzf)"'
fcd() {
    local dir
    dir="$(find * -type d 2> /dev/null | fzf)" && cd "$dir"
}

fmv() {
  local files=()
  local dest_dir

  # If no file arguments provided, show an error message and return
  if [ "$#" -eq 0 ]; then
    echo "No files specified for moving. Usage: fmv file1 file2 file3 ..."
    return 1
  fi

  # Collect file arguments
  for file in "$@"; do
    if [ -f "$file" ]; then
      files+=("$file")
    else
      echo "File '$file' not found."
    fi
  done

  # Use fzf to select the destination directory from ~
  dest_dir=$(find "$HOME" -type d -not -path '*/\.*' 2>/dev/null | fzf)

  if [ -z "$dest_dir" ]; then
    echo "No destination directory selected. Aborting."
    return 1
  fi

  # Move selected files to the destination directory
  for file in "${files[@]}"; do
    mv "$file" "$dest_dir"
  done

  cd "$dest_dir"
}

socprint() {
    FILE=$2
    TMPNAME="~/__TO_PRINT"
    scp "$FILE" stu:$TMPNAME &&
    ssh stu "lpr -Ppsts $TMPNAME && rm $TMPNAME"
}
complete -F _filedir_xspec psts

alias back="git checkout main"
alias new="git checkout main; git checkout -b"
alias ga="git add"
alias gc="git commit -m"
alias gca="git commit --amend --no-edit"
alias gco="git checkout"
alias gcob="git checkout -b"
alias gd="git diff"
alias gl="git lg"
alias gm="git merge"
alias gps="git push -u origin HEAD"
alias gpl="git pull"
alias gs="git status"
getpr() {
    if [ $# -ne 1 ]; then
        echo "Usage: getpr ID"
        return 1
    fi

    ID=$1
    BRANCHNAME="pr-$ID"

    git fetch origin "pull/$ID/head:$BRANCHNAME"
    echo "Fetched pull request $ID and created branch $BRANCHNAME"
}

eval "$(zoxide init bash)"

alias dwr="dnf repoquery --whatrequires"
alias dwd="dnf repoquery --whatdepends"

chezupdate() {
    ORIG=$(pwd)
    chezmoi re-add
    cd $(chezmoi source-path)
    git diff
    echo "confirm? (y/n)"
    read answer
    if [ "$answer" != "${answer#[Yy]}" ]; then 
        git add . && git commit -m "$(git diff --staged --name-only | xargs -rd '\n' basename -a | awk '{print}' ORS=' ')" && git push -u origin HEAD
    fi
    cd $ORIG
}

alias fz="fzf --preview-window=up,20%,wrap --preview='basename {}' --hscroll-off=180 --cycle --height=~25%"
